{"version":3,"sources":["components/Comic.js","App.js","registerServiceWorker.js","index.js"],"names":["Comic","this","setState","img","title","alt","id","transcript","comics","loadComic","document","addEventListener","event","handleKeydown","removeEventListener","nextProps","state","Number","history","location","pathname","slice","key","altKey","goToPage","randomInt","props","fetch","concat","then","response","json","num","catch","error","n","push","from","to","Math","floor","random","navigation","className","color","onClick","active","src","toggler","href","Component","withRouter","App","Route","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","BrowserRouter","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.614adf32.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {Button, ButtonGroup, UncontrolledCollapse, Card, CardBody} from 'reactstrap'\n\nimport './Comic.css'\n\nclass Comic extends Component {\n  componentWillMount() {\n    this.setState({\n      img: 'image',\n      title: 'image',\n      alt: 'alt',\n      id: '',\n      transcript: '',\n      comics: {},\n    })\n    this.loadComic()\n    document.addEventListener(\"keydown\", (event) => this.handleKeydown(event), false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keyPress\", (event) => this.handleKeydown(event), false);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.state.id !== Number(nextProps.history.location.pathname.slice(12))) {\n      this.loadComic(Number(nextProps.history.location.pathname.slice(12)))\n    }\n  }\n  handleKeydown(event) {\n    const {key, altKey} = event\n    const {id} = this.state\n    if (altKey && key === 'ArrowLeft') {} // not to override alt+ArrowLeft functionality\n    else if (altKey && key === 'ArrowRight') {}\n    else if (key === 'ArrowLeft' ||\n      key === 'a' ||\n      key === 'A')\n      this.goToPage(id - 1)\n    else if (key === 'ArrowRight' ||\n      key === 'd' ||\n      key === 'D')\n      this.goToPage(id + 1)\n    else if (key === 'r' ||\n      key === 'R')\n      this.goToPage(this.randomInt(1, 2039))\n  }\n  loadComic(id = this.props.location.pathname.slice(12)) {\n    if (this.state && this.state.comics[Number(id)]) {\n      const {img, title, alt, transcript} = this.state.comics[Number(id)]\n      this.setState({img, title, alt, id, transcript})\n    } else {\n      fetch('https://xkcd.now.sh/?comic='.concat(id))\n        .then(function (response) {\n          return response.json()\n        })\n        .then(({img, title, alt, num, transcript}) => {\n          this.setState({\n            img,\n            title,\n            alt,\n            id: num,\n            transcript,\n            comics: {...this.state.comics, [num]: {img, title, alt, transcript}},\n          })\n        })\n        .catch((error) => {\n          if (id === '' || id === '/') {\n            return\n          }\n          this.loadComic('/')\n        })\n    }\n  }\n  goToPage(n = '') {\n    this.props.history.push('/react-xkcd/'.concat(n))\n  }\n  randomInt(from, to) {\n    return Math.floor((Math.random() * to) + from);\n  }\n  render() {\n    const navigation =\n      <div className=\"navigation-wrapper\">\n        <ButtonGroup>\n          <Button color=\"primary\" onClick={() => this.goToPage(1)}>{'<<'}</Button>\n          <Button color=\"primary\" onClick={() => this.goToPage(this.state.id - 1)}>Prev</Button>\n          <Button color=\"primary\" onClick={() => this.goToPage(this.randomInt(1, 2039))}>Random</Button>\n          <Button color=\"primary\" onClick={() => this.goToPage(this.state.id + 1)}>Next</Button>\n          <Button color=\"primary\" active={false} onClick={() => this.goToPage()}>{'>>'}</Button>\n        </ButtonGroup>\n      </div>\n    return (\n      <div className=\"container\">\n        <h1>{this.state.title}</h1>\n        {navigation}\n        <br />\n        <div className=\"image-wrapper\">\n          <img className=\"comic\" src={this.state.img} alt=\"Possibly a game, try link to original page\" />\n          <div id=\"left-image-overlay\"></div>\n        </div>\n        <br />\n        <p className=\"bodyText\">\n          <strong>Alt text: </strong>\n          {this.state.alt}\n        </p>\n        {this.state.transcript &&\n          <Fragment>\n            <Button color=\"primary\" id=\"toggler\" className=\"mb-1\">Transcript</Button>\n            <UncontrolledCollapse toggler=\"#toggler\">\n              <Card className=\"bodyText\">\n                <CardBody>\n                  {this.state.transcript}\n                </CardBody>\n              </Card>\n            </UncontrolledCollapse>\n          </Fragment>}\n        {navigation}\n        <a href={'https://www.explainxkcd.com/wiki/index.php/'.concat(this.state.id)}>Don't get the joke?</a>\n        <br />\n        <a href={'https://xkcd.com/'.concat(this.state.id)}>This comic on xkcd</a>\n        <br />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Comic)\n","import React, {Component} from 'react'\nimport {Route, withRouter} from 'react-router-dom'\n\nimport Comic from './components/Comic'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Route path=\"/react-xkcd/\" component={Comic} />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}